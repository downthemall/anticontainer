<?xml version="1.0"?>
<!DOCTYPE bindings SYSTEM "chrome://dtaac/locale/bindings.dtd" >

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is DownThemAll! AntiContainer bindings.
   -
   - The Initial Developer of the Original Code is
   - Nils Maier.
   - Portions created by the Initial Developer are Copyright (C) 2009
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -  Nils Maier <Maierman@web.de>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<bindings
	id="acOptionBindings"
	xmlns="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:xbl="http://www.mozilla.org/xbl">
	
	<binding id="acplugin-inner">
		<content>
			<xul:hbox class="acplugin" flex="1" xbl:inherits="tooltiptext=desc" align="center">
				<xul:image class="acplugin-icon" xbl:inherits="ptype"/>
				<xul:grid flex="1">
					<xul:columns>
						<xul:column/>
						<xul:column flex="1"/>
						<xul:column/>
						<xul:column/>
					</xul:columns>
					<xul:rows>
						<xul:row>
							<xul:label class="acplugin-position" xbl:inherits="value=position"/>						
							<xul:label class="acplugin-label" xbl:inherits="value=prefix"/>
							<xul:label class="acplugin-priority-label acplugin-info-label" value="&ac.priority;"/>
							<xul:label class="acplugin-priority-text" xbl:inherits="value=priority"/>
						</xul:row>
						<xul:row>
							<xul:label class="acplugin-type-label acplugin-info-label" value="&ac.type;" />
							<xul:label class="acplugin-type-text" xbl:inherits="value=cleantype"/>
							<xul:label class="acplugin-date-label acplugin-info-label" value="&ac.updated;"/>
							<xul:label class="acplugin-date-text" xbl:inherits="value=date"/>							
						</xul:row>
						<xul:row>
							<xul:label class="acplugin-author-label acplugin-info-label" value="&ac.author;" />
							<xul:label class="acplugin-author-text" xbl:inherits="value=author"/>
							<xul:label class="acplugin-source-label acplugin-info-label" value="&ac.source;" />
							<xul:label class="acplugin-source-text" xbl:inherits="value=source" />							
						</xul:row>
					</xul:rows>
				</xul:grid>
			</xul:hbox>
		</content>
		<implementation>
			<constructor>
				if (this.getAttribute('managed') == 'true') {
					this.setAttribute('source', '&ac.plugin.managed;');
				}
				else {
					this.setAttribute('source', '&ac.plugin.user;');
				}
				switch (this.getAttribute('ptype')) {
				case 'resolver':
					this.setAttribute('cleantype', '&ac.resolver;');
					break;
				case 'redirector':
					this.setAttribute('cleantype', '&ac.redirector;');
					break;
				case 'sandbox':
					this.setAttribute('cleantype', '&ac.sandbox;');
					break;
				case 'expander':
					this.setAttribute('cleantype', '&ac.expander;');
					break;
				default:
					this.setAttribute('cleantype', '&ac.unspecified;');
					break;					
				}
			</constructor>
		</implementation>
	</binding>
	<binding id="acplugin-base" extends="chrome://global/content/bindings/richlistbox.xml#richlistitem">
		<implementation>
			<field name="_inner">document.getAnonymousElementByAttribute(this, 'anonid', 'inner');</field>
			<property name="activated" onget="return this.getAttribute('activated') == 'true';">
				<setter>
 					this.setAttribute('activated', val);
 					return val;
				</setter> 				
			</property>
		</implementation>
	</binding>
	<binding id="acplugin" extends="chrome://dtaac/content/bindings.xml#acplugin-base">
		<content>
			<xul:acplugininner xbl:inherits="prefix,date,position,priority,match,ptype,activated,managed,author" anonid="inner" flex="1"/>
		</content>	
	</binding>	
	<binding id="acplugin-selected" extends="chrome://dtaac/content/bindings.xml#acplugin-base">
		<implementation>
			<field name="_btnEdit">document.getAnonymousElementByAttribute(this, 'anonid', 'btnedit');</field>
			<field name="_btnSource">document.getAnonymousElementByAttribute(this, 'anonid', 'btnsource');</field>
			<field name="_btnUninstall">document.getAnonymousElementByAttribute(this, 'anonid', 'btnuninstall');</field>
			
			<constructor><![CDATA[
				if (this.getAttribute('managed') == 'true') {
					this._btnUninstall.hidden = this._btnEdit.hidden = true;
				}
			]]></constructor>
			<method name="_toggle">
				<body><![CDATA[
					this.activated = !this.activated;
					let event = document.createEvent("Events");
					event.initEvent("change", true, true);
					this.dispatchEvent(event);
				]]></body>
			</method>
			<method name="_uninstall">
				<body><![CDATA[
				if (this.getAttribute('managed') == 'true') {
					return;
				}
				let prompter = {};
				Components.utils.import('resource://dta/prompts.jsm', prompter);
				let plugins = {};
				Components.utils.import('resource://dtaac/plugins.jsm', plugins);
				
				]]>
				if (!prompter.confirmYN(window, '&ac.plugin.uninstalltitle;', '&ac.plugin.uninstallquestion;')) {
					plugins.uninstallPlugin(this.getAttribute('plugin'));
					prompter.alert(window, '&ac.plugin.uninstalltitle;', '&ac.plugin.uninstalled;');
				}
				<![CDATA[
				
				]]></body>
			</method>
			<method name="_showSource">
				<body><![CDATA[
				let _m = ('DTA_Mediator' in window) ? DTA_Mediator : DTA.Mediator; 
				if (this.getAttribute('file')) {
					_m.open('file://' + this.getAttribute('file'));
				}
				else {
					_m.open('data:text/plain,' + this.getAttribute('source'));
				}
				]]></body>
			</method>
			<method name="_editSource">
				<body><![CDATA[
				acPlugins.showInEditor(this.getAttribute('file'));
				]]></body>
			</method>						
		</implementation>
		<handlers>
			<handler event="click"><![CDATA[
				switch (event.originalTarget.getAttribute('anonid')) {
				case 'btnsource':
					this._showSource();
					break;
				case 'btnedit':
					this._editSource();
					break;
				case 'btntoggle':
					this._toggle();
					break;
				case 'btnuninstall':
					this._uninstall();
					break;
				default:
					// allow event propagation
					return;
				}
				event.preventDefault();
				event.stopPropagation();				
			]]></handler>
		</handlers>	
	</binding>
	<binding id="acplugin-selected-active" extends="chrome://dtaac/content/bindings.xml#acplugin-selected">
		<content>
			<xul:vbox flex="1">
				<xul:acplugininner xbl:inherits="prefix,date,position,priority,match,ptype,activated,managed,author" anonid="inner" flex="1"/>
				<xul:hbox>
					<xul:spacer flex="10"/>
					<xul:button anonid="btnsource" label="&ac.plugin.showsource;"/>
					<xul:button anonid="btnedit" label="&ac.plugin.editsource;"/>					
					<xul:spacer flex="1"/>
					<xul:button class="acplugin-deactivate" anonid="btntoggle" label="&ac.plugin.deactivate;"/>
					<xul:button class="acplugin-uninstall" label="&ac.plugin.uninstall;" anonid="btnuninstall" xbl:inherits="disabled=managed"/>
				</xul:hbox>
			</xul:vbox>
		</content>	
	</binding>
	<binding id="acplugin-selected-inactive" extends="chrome://dtaac/content/bindings.xml#acplugin-selected">
		<content>
			<xul:vbox flex="1">
				<xul:acplugininner xbl:inherits="prefix,date,position,priority,match,ptype,activated,managed,author" anonid="inner" flex="1"/>
				<xul:hbox>
					<xul:spacer flex="10"/>
					<xul:button anonid="btnsource" label="&ac.plugin.showsource;"/>
					<xul:button anonid="btnedit" label="&ac.plugin.editsource;"/>
					<xul:spacer flex="1"/>
					<xul:button class="acplugin-activate" anonid="btntoggle" label="&ac.plugin.activate;"/>
					<xul:button class="acplugin-uninstall" label="&ac.plugin.uninstall;" anonid="btnuninstall" xbl:inherits="disabled=managed"/>
				</xul:hbox>
			</xul:vbox>
		</content>	
	</binding>
</bindings>